{
    "single import": {
        "prefix": "im",
        "body": "import \"${1:package}\"",
        "description": "Snippet for import statement"
    },
    "multiple imports": {
        "prefix": "ims",
        "body": [
            "import (",
            "\t\"${1:package}\"",
            ")"
        ],
        "description": "Snippet for a import block"
    },
    "single constant": {
        "prefix": "co",
        "body": "const ${1:name} = ${2:value}",
        "description": "Snippet for a constant"
    },
    "multiple constants": {
        "prefix": "cos",
        "body": [
            "const (",
            "\t${1:name} = ${2:value}",
            ")"
        ],
        "description": "Snippet for a constant block"
    },
    "type function declaration": {
        "prefix": "tyf",
        "body": "type ${1:name} func($3) $4",
        "description": "Snippet for a type function declaration"
    },
    "type interface declaration": {
        "prefix": "tyi",
        "body": [
            "type ${1:name} interface {",
            "\t$0",
            "}"
        ],
        "description": "Snippet for a type interface"
    },
    "type struct declaration": {
        "prefix": "tys",
        "body": [
            "type ${1:name} struct {",
            "\t$0",
            "}"
        ],
        "description": "Snippet for a struct declaration"
    },
    "package main and main function": {
        "prefix": "pkgm",
        "body": [
            "package main",
            "",
            "func main() {",
            "\t$0",
            "}"
        ],
        "description": "Snippet for main package & function"
    },
    "function declaration": {
        "prefix": "func",
        "body": [
            "func $1($2) $3 {",
            "\t$0",
            "}"
        ],
        "description": "Snippet for function declaration"
    },
    "variable declaration": {
        "prefix": "var",
        "body": "var ${1:name} ${2:type}",
        "description": "Snippet for a variable"
    },
    "variables declaration": {
        "prefix": "vars",
        "body": [
            "var (",
            "\t${1:name} ${2:type} = ${3:value}",
            ")"
        ],
        "description": "Snippet for a variable"
    },
    "switch statement": {
        "prefix": "switch",
        "body": [
            "switch ${1:expression} {",
            "case ${2:condition}:",
            "\t$0",
            "}"
        ],
        "description": "Snippet for switch statement"
    },
    "select statement": {
        "prefix": "sel",
        "body": [
            "select {",
            "case ${1:condition}:",
            "\t$0",
            "}"
        ],
        "description": "Snippet for select statement"
    },
    "case clause": {
        "prefix": "cs",
        "body": "case ${1:condition}:$0",
        "description": "Snippet for case clause"
    },
    "for statement": {
        "prefix": "for",
        "body": [
            "for ${1}{",
            "\t$0",
            "}"
        ],
        "description": "Snippet for a pure for loop"
    },
    "for n statement": {
        "prefix": "forin",
        "body": [
            "for ${1:i} := ${2:0}; $1 < ${3:count}; $1${4:++} {",
            "\t$0",
            "}"
        ],
        "description": "Snippet for a for loop"
    },
    "for range statement": {
        "prefix": "foreach",
        "body": [
            "for ${1:_}, ${2:v} := range ${3:v} {",
            "\t$0",
            "}"
        ],
        "description": "Snippet for a for range loop"
    },
    "map declaration": {
        "prefix": "map",
        "body": "map[${1:type}]${2:type}",
        "description": "Snippet for a map"
    },
    "if statement": {
        "prefix": "if",
        "body": [
            "if ${1:condition} {",
            "\t$0",
            "}"
        ],
        "description": "Snippet for if statement"
    },
    "else branch": {
        "prefix": "el",
        "body": [
            "else {",
            "\t$0",
            "}"
        ],
        "description": "Snippet for else branch"
    },
    "if else statement": {
        "prefix": "ife",
        "body": [
            "if ${1:condition} {",
            "\t$2",
            "} else {",
            "\t$0",
            "}"
        ],
        "description": "Snippet for if else"
    },
    "if err != nil": {
        "prefix": "ir",
        "body": [
            "if err != nil {",
            "\t${1:return ${2:nil, }${3:err}}",
            "}"
        ],
        "description": "Snippet for if err != nil"
    },
    "fmt.Println": {
        "prefix": "fp",
        "body": "fmt.Println(\"$1\")",
        "description": "Snippet for fmt.Println()"
    },
    "fmt.Printf": {
        "prefix": "ff",
        "body": "fmt.Printf(\"$1\", ${2:var})",
        "description": "Snippet for fmt.Printf()"
    },
    "make(...)": {
        "prefix": "make",
        "body": "make(${1:type}, ${2:0})",
        "description": "Snippet for make statement"
    },
    "new(...)": {
        "prefix": "new",
        "body": "new(${1:type})",
        "description": "Snippet for new statement"
    },
    "method declaration": {
        "prefix": ["meth", "fum"],
        "body": "func (${1:receiver} ${2:type}) ${3:method}($4) $5 {\n\t$0\n}",
        "description": "Snippet for method declaration"
    }
}
